From 7de6b7c57229b069a94a7e50b4e20e012d157b10 Mon Sep 17 00:00:00 2001
From: moo <48740106+moom0o@users.noreply.github.com>
Date: Sat, 24 Apr 2021 17:41:03 -0400
Subject: [PATCH] rename to papaya

rename to papaya because some dumbass complained

diff --git a/src/main/java/me/moomoo/durian/DurianCommand.java b/src/main/java/me/moomoo/papaya/PapayaCommand.java
similarity index 82%
rename from src/main/java/me/moomoo/durian/DurianCommand.java
rename to src/main/java/me/moomoo/papaya/PapayaCommand.java
index e813b903..b53b9072 100644
--- a/src/main/java/me/moomoo/durian/DurianCommand.java
+++ b/src/main/java/me/moomoo/papaya/PapayaCommand.java
@@ -1,4 +1,4 @@
-package me.moomoo.durian;
+package me.moomoo.papaya;
 
 import net.minecraft.server.CommandAbstract;
 import net.minecraft.server.MinecraftServer;
@@ -12,13 +12,13 @@ import java.util.Collections;
 import java.util.List;
 import java.util.Locale;
 
-public class DurianCommand extends Command {
+public class PapayaCommand extends Command {
 
-    public DurianCommand(String name) {
+    public PapayaCommand(String name) {
         super(name);
-        this.description = "Durian related commands";
-        this.usageMessage = "/durian [reload | version]";
-        this.setPermission("bukkit.command.durian");
+        this.description = "Papaya related commands";
+        this.usageMessage = "/papaya [reload | version]";
+        this.setPermission("bukkit.command.papaya");
     }
 
     @Override
@@ -58,10 +58,10 @@ public class DurianCommand extends Command {
         Command.broadcastCommandMessage(sender, ChatColor.RED + "If you encounter any issues please use the /stop command to restart your server.");
 
         MinecraftServer console = MinecraftServer.getServer();
-        me.moomoo.durian.DurianConfig.init((File) console.options.valueOf("durian-settings"));
+        PapayaConfig.init((File) console.options.valueOf("papaya-settings"));
 
         console.server.reloadCount++;
 
-        Command.broadcastCommandMessage(sender, ChatColor.GREEN + "Durian config reload complete.");
+        Command.broadcastCommandMessage(sender, ChatColor.GREEN + "Papaya config reload complete.");
     }
 }
diff --git a/src/main/java/me/moomoo/durian/DurianConfig.java b/src/main/java/me/moomoo/papaya/PapayaConfig.java
similarity index 77%
rename from src/main/java/me/moomoo/durian/DurianConfig.java
rename to src/main/java/me/moomoo/papaya/PapayaConfig.java
index bb47ec66..62fca631 100644
--- a/src/main/java/me/moomoo/durian/DurianConfig.java
+++ b/src/main/java/me/moomoo/papaya/PapayaConfig.java
@@ -1,4 +1,4 @@
-package me.moomoo.durian;
+package me.moomoo.papaya;
 
 import com.google.common.base.Throwables;
 import net.minecraft.server.MinecraftServer;
@@ -19,17 +19,17 @@ import java.util.concurrent.TimeUnit;
 import java.util.logging.Level;
 import java.util.regex.Pattern;
 
-public class DurianConfig {
+public class PapayaConfig {
 
     private static File CONFIG_FILE;
-    private static final String HEADER = "This is the main configuration file for Durian.\n"
+    private static final String HEADER = "This is the main configuration file for Papaya.\n"
         + "As you can see, there's some things to configure. Some options may impact gameplay, so use\n"
         + "with caution, and make sure you know what each option does before configuring.\n"
         + "\n"
-        + "If you need help with the configuration or have any questions related to Durian,\n"
+        + "If you need help with the configuration or have any questions related to Papaya,\n"
         + "join us in our Discord channel.\n"
         + "\n"
-        + "DISCORD: #durian @ https://discord.gg/T2HQRrNp\n";
+        + "DISCORD: #papaya @ https://discord.gg/T2HQRrNp\n";
     /*========================================================================*/
     public static YamlConfiguration config;
     static int version;
@@ -45,7 +45,7 @@ public class DurianConfig {
             config.load(CONFIG_FILE);
         } catch (IOException ex) {
         } catch (InvalidConfigurationException ex) {
-            Bukkit.getLogger().log(Level.SEVERE, "Could not load durian.yml, please correct your syntax errors", ex);
+            Bukkit.getLogger().log(Level.SEVERE, "Could not load papaya.yml, please correct your syntax errors", ex);
             throw Throwables.propagate(ex);
         }
         config.options().header(HEADER);
@@ -53,11 +53,11 @@ public class DurianConfig {
         verbose = getBoolean("verbose", false);
 
         commands = new HashMap<String, Command>();
-        commands.put("durian", new DurianCommand("durian"));
+        commands.put("papaya", new PapayaCommand("papaya"));
 
         version = getInt("config-version", 13);
         set("config-version", 13);
-        readConfig(DurianConfig.class, null);
+        readConfig(PapayaConfig.class, null);
     }
 
     protected static void logError(String s) {
@@ -72,7 +72,7 @@ public class DurianConfig {
 
     public static void registerCommands() {
         for (Map.Entry<String, Command> entry : commands.entrySet()) {
-            MinecraftServer.getServer().server.getCommandMap().register(entry.getKey(), "Durian", entry.getValue());
+            MinecraftServer.getServer().server.getCommandMap().register(entry.getKey(), "Papaya", entry.getValue());
         }
     }
 
@@ -183,9 +183,38 @@ public class DurianConfig {
     }
 
     //////////////////////////////////////////////////////////////////////////////////////////////////////////
-    public static boolean testBoolean = true;
+    public static String serverBrand = "Papaya";
+    private static void serverBrand() {
+        serverBrand = getString("settings.server-brand", "Papaya");
+    }
+
+    public static Integer lightMaxTime = 300;
+    private static void lightMaxTime() {
+        lightMaxTime = getInt("settings.max-light-time", 300);
+    }
+
+    public static Boolean removeConsoleSpam = false;
+    private static void removeConsoleSpam() {
+        removeConsoleSpam = getBoolean("messages.remove-console-spam", false);
+    }
+
+    public static Boolean hidePlayerIPS = false;
+    private static void hidePlayerIPS() {
+        hidePlayerIPS = getBoolean("messages.hide-player-ips-from-console", false);
+    }
+
+    public static Boolean hidePlayerCoords = false;
+    private static void hidePlayerCoords() {
+        hidePlayerCoords = getBoolean("messages.hide-player-coords-from-console", false);
+    }
+
+    public static Boolean removeConnectionMessages = false;
+    private static void removeConnectionMessages() {
+        removeConnectionMessages = getBoolean("messages.remove-connection-messages-from-console", false);
+    }
 
-    private static void testBoolean() {
-        testBoolean = getBoolean("settings.test-boolean", true);
+    public static Boolean removePlayerCommands = false;
+    private static void removePlayerCommands() {
+        removePlayerCommands = getBoolean("messages.remove-player-command-messages-from-console", false);
     }
 }
diff --git a/src/main/java/net/minecraft/server/DedicatedServer.java b/src/main/java/net/minecraft/server/DedicatedServer.java
index 1891c7a9..04d9b0e3 100644
--- a/src/main/java/net/minecraft/server/DedicatedServer.java
+++ b/src/main/java/net/minecraft/server/DedicatedServer.java
@@ -4,6 +4,7 @@ import co.aikar.timings.MinecraftTimings;
 import com.mojang.authlib.GameProfileRepository;
 import com.mojang.authlib.minecraft.MinecraftSessionService;
 import com.mojang.authlib.yggdrasil.YggdrasilAuthenticationService;
+import me.moomoo.papaya.PapayaConfig;
 import org.apache.logging.log4j.Level;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
@@ -191,10 +192,10 @@ public class DedicatedServer extends MinecraftServer implements IMinecraftServer
             com.destroystokyo.paper.PaperConfig.registerCommands();
             com.destroystokyo.paper.VersionHistoryManager.INSTANCE.getClass(); // load version history now
             // Paper end
-            // Durian start
-            me.moomoo.durian.DurianConfig.init((File) options.valueOf("durian-settings"));
-            me.moomoo.durian.DurianConfig.registerCommands();
-            // Durian end
+            // Papaya start
+            PapayaConfig.init((File) options.valueOf("papaya-settings"));
+            PapayaConfig.registerCommands();
+            // Papaya end
 
             DedicatedServer.LOGGER.info("Generating keypair");
             this.a(MinecraftEncryption.b());
diff --git a/src/main/java/net/minecraft/server/EULA.java b/src/main/java/net/minecraft/server/EULA.java
index 3623751b..979a993d 100644
--- a/src/main/java/net/minecraft/server/EULA.java
+++ b/src/main/java/net/minecraft/server/EULA.java
@@ -52,7 +52,7 @@ public class EULA {
             fileoutputstream = new FileOutputStream(this.b);
             properties.setProperty("eula", "false");
             properties.store(fileoutputstream, "By changing the setting below to TRUE you are indicating your agreement to our EULA (https://account.mojang.com/documents/minecraft_eula)." +
-                    "\nand also agreeing that tacos are tasty.");  // Paper - fix lag
+                    "\nand also agreeing that windows server is shit.");  // Papaya - fix lag
         } catch (Exception exception) {
             EULA.a.warn("Failed to save {}", this.b, exception);
         } finally {
diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index 3b982f99..fea9439c 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -1,7 +1,6 @@
 package net.minecraft.server;
 
 import com.google.common.collect.Lists;
-import com.google.common.collect.Queues;
 import com.google.common.util.concurrent.Futures;
 import com.google.common.util.concurrent.ListenableFuture;
 import com.google.common.util.concurrent.ListenableFutureTask;
@@ -27,7 +26,6 @@ import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Collections;
 import java.util.Date;
-import java.util.Iterator;
 import java.util.List;
 import java.util.Queue;
 import java.util.Random;
@@ -35,17 +33,15 @@ import java.util.UUID;
 import java.util.concurrent.Callable;
 import java.util.concurrent.Executors;
 import java.util.concurrent.FutureTask;
-import java.util.function.Supplier;
 import javax.annotation.Nullable;
 import javax.imageio.ImageIO;
+
+import me.moomoo.papaya.PapayaConfig;
 import org.apache.commons.lang3.Validate;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 // CraftBukkit start
 import joptsimple.OptionSet;
-import org.bukkit.Bukkit;
-import org.bukkit.craftbukkit.CraftServer;
-import org.bukkit.craftbukkit.Main;
 // CraftBukkit end
 import org.spigotmc.SlackActivityAccountant; // Spigot
 import co.aikar.timings.MinecraftTimings; // Paper
@@ -1156,7 +1152,7 @@ public abstract class MinecraftServer implements ICommandListener, Runnable, IAs
     }
 
     public String getServerModName() {
-        return "Paper"; //Paper - Paper > // Spigot - Spigot > // CraftBukkit - cb > vanilla!
+        return PapayaConfig.serverBrand; //Papaya - Papaya > Paper - Paper > // Spigot - Spigot > // CraftBukkit - cb > vanilla!
     }
 
     public CrashReport b(CrashReport crashreport) {
diff --git a/src/main/java/net/minecraft/server/NetworkManager.java b/src/main/java/net/minecraft/server/NetworkManager.java
index 95c7eba9..cf7175de 100644
--- a/src/main/java/net/minecraft/server/NetworkManager.java
+++ b/src/main/java/net/minecraft/server/NetworkManager.java
@@ -21,6 +21,8 @@ import java.util.Queue;
 import java.util.concurrent.locks.ReentrantReadWriteLock;
 import javax.annotation.Nullable;
 import javax.crypto.SecretKey;
+
+import me.moomoo.papaya.PapayaConfig;
 import org.apache.commons.lang3.ArrayUtils;
 import org.apache.commons.lang3.Validate;
 import org.apache.logging.log4j.LogManager;
@@ -352,7 +354,9 @@ public class NetworkManager extends SimpleChannelInboundHandler<Packet<?>> {
     public void handleDisconnection() {
         if (this.channel != null && !this.channel.isOpen()) {
             if (this.p) {
-                NetworkManager.g.warn("handleDisconnection() called twice");
+                if(!PapayaConfig.removeConsoleSpam){
+                    NetworkManager.g.warn("handleDisconnection() called twice");
+                }
             } else {
                 this.p = true;
                 if (this.j() != null) {
diff --git a/src/main/java/net/minecraft/server/PaperLightingQueue.java b/src/main/java/net/minecraft/server/PaperLightingQueue.java
index f1c01311..cbb48294 100644
--- a/src/main/java/net/minecraft/server/PaperLightingQueue.java
+++ b/src/main/java/net/minecraft/server/PaperLightingQueue.java
@@ -2,11 +2,12 @@ package net.minecraft.server;
 
 import co.aikar.timings.Timing;
 import it.unimi.dsi.fastutil.objects.ObjectCollection;
+import me.moomoo.papaya.PapayaConfig;
 
 import java.util.ArrayDeque;
 
 class PaperLightingQueue {
-    private static final long MAX_TIME = (long) (1000000000 / 20 * 1.15);
+    private static final long MAX_TIME = (long) (PapayaConfig.lightMaxTime / 20 * 1.15); // Papaya - Allow changing max light time
 
     static void processQueue(long curTime) {
         final long startTime = System.nanoTime();
diff --git a/src/main/java/net/minecraft/server/PlayerConnection.java b/src/main/java/net/minecraft/server/PlayerConnection.java
index 59d52632..a64c0b8f 100644
--- a/src/main/java/net/minecraft/server/PlayerConnection.java
+++ b/src/main/java/net/minecraft/server/PlayerConnection.java
@@ -1,17 +1,15 @@
 package net.minecraft.server;
 
-import com.google.common.collect.Lists;
 import com.google.common.primitives.Doubles;
 import com.google.common.primitives.Floats;
-import com.google.common.util.concurrent.Futures;
 import io.netty.util.concurrent.Future;
 import io.netty.util.concurrent.GenericFutureListener;
 import java.io.IOException;
 import java.util.ArrayList;
 import java.util.Collections;
-import java.util.Iterator;
-import java.util.List;
 import java.util.Set;
+
+import me.moomoo.papaya.PapayaConfig;
 import org.apache.commons.lang3.StringUtils;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
@@ -148,7 +146,9 @@ public class PlayerConnection implements PacketListenerPlayIn, ITickable {
         this.processedMovePackets = this.receivedMovePackets;
         if (this.B) {
             if (++this.C > 80) {
-                PlayerConnection.LOGGER.warn("{} was kicked for floating too long!", this.player.getName());
+                if(!PapayaConfig.removeConsoleSpam){ // Papaya - Allow disabling message
+                    PlayerConnection.LOGGER.warn("{} was kicked for floating too long!", this.player.getName());
+                }
                 this.disconnect(com.destroystokyo.paper.PaperConfig.flyingKickPlayerMessage); // Paper - use configurable kick message
                 return;
             }
@@ -167,7 +167,9 @@ public class PlayerConnection implements PacketListenerPlayIn, ITickable {
             this.x = this.r.locZ;
             if (this.D && this.player.getVehicle().bE() == this.player) {
                 if (++this.E > 80) {
-                    PlayerConnection.LOGGER.warn("{} was kicked for floating a vehicle too long!", this.player.getName());
+                    if(!PapayaConfig.removeConsoleSpam) { // Papaya - Allow disabling message
+                        PlayerConnection.LOGGER.warn("{} was kicked for floating a vehicle too long!", this.player.getName());
+                    }
                     this.disconnect(com.destroystokyo.paper.PaperConfig.flyingKickVehicleMessage); // Paper - use configurable kick message
                     return;
                 }
@@ -352,7 +354,9 @@ public class PlayerConnection implements PacketListenerPlayIn, ITickable {
 
                 if (d10 - d9 > Math.max(100.0D, Math.pow((double) (org.spigotmc.SpigotConfig.movedTooQuicklyMultiplier * (float) i * speed), 2)) && (!this.minecraftServer.R() || !this.minecraftServer.Q().equals(entity.getName()))) { // Spigot
                 // CraftBukkit end
-                    PlayerConnection.LOGGER.warn("{} (vehicle of {}) moved too quickly! {},{},{}", entity.getName(), this.player.getName(), Double.valueOf(d6), Double.valueOf(d7), Double.valueOf(d8));
+                        if(!PapayaConfig.removeConsoleSpam) { // Papaya - Allow disabling message
+                            PlayerConnection.LOGGER.warn("{} (vehicle of {}) moved too quickly! {},{},{}", entity.getName(), this.player.getName(), Double.valueOf(d6), Double.valueOf(d7), Double.valueOf(d8));
+                        }
                     this.networkManager.sendPacket(new PacketPlayOutVehicleMove(entity));
                     return;
                 }
@@ -377,7 +381,9 @@ public class PlayerConnection implements PacketListenerPlayIn, ITickable {
 
                 if (d10 > org.spigotmc.SpigotConfig.movedWronglyThreshold) { // Spigot
                     flag1 = true;
-                    PlayerConnection.LOGGER.warn(entity.getName() + " (vehicle of " + this.player.getName() + ") moved wrongly!"); // Paper - More informative
+                    if(!PapayaConfig.removeConsoleSpam) { // Papaya - Allow disabling message
+                        PlayerConnection.LOGGER.warn(entity.getName() + " (vehicle of " + this.player.getName() + ") moved wrongly!"); // Paper - More informative
+                    }
                 }
                 Location curPos = this.getPlayer().getLocation(); // Spigot
 
@@ -600,7 +606,9 @@ public class PlayerConnection implements PacketListenerPlayIn, ITickable {
 
                                 if (d11 - d10 > Math.max(f2, Math.pow((double) (org.spigotmc.SpigotConfig.movedTooQuicklyMultiplier * (float) i * speed), 2)) && (!this.minecraftServer.R() || !this.minecraftServer.Q().equals(this.player.getName()))) { // Spigot
                                 // CraftBukkit end
-                                    PlayerConnection.LOGGER.warn("{} moved too quickly! {},{},{}", this.player.getName(), Double.valueOf(d7), Double.valueOf(d8), Double.valueOf(d9));
+                                    if(!PapayaConfig.removeConsoleSpam) { // Papaya - Allow disabling message
+                                        PlayerConnection.LOGGER.warn("{} moved too quickly! {},{},{}", this.player.getName(), Double.valueOf(d7), Double.valueOf(d8), Double.valueOf(d9));
+                                    }
                                     this.a(this.player.locX, this.player.locY, this.player.locZ, this.player.yaw, this.player.pitch);
                                     return;
                                 }
@@ -658,7 +666,9 @@ public class PlayerConnection implements PacketListenerPlayIn, ITickable {
 
                             if (!this.player.L() && d11 > org.spigotmc.SpigotConfig.movedWronglyThreshold && !this.player.isSleeping() && !this.player.playerInteractManager.isCreative() && this.player.playerInteractManager.getGameMode() != EnumGamemode.SPECTATOR) { // Spigot
                                 flag1 = true;
-                                PlayerConnection.LOGGER.warn("{} moved wrongly!", this.player.getName());
+                                if(!PapayaConfig.removeConsoleSpam) { // Papaya - Allow disabling message
+                                    PlayerConnection.LOGGER.warn("{} moved wrongly!", this.player.getName());
+                                }
                             }
 
                             this.player.setLocation(d4, d5, d6, f, f1);
@@ -892,7 +902,9 @@ public class PlayerConnection implements PacketListenerPlayIn, ITickable {
                     // Else we increment the drop count and check the amount.
                     this.dropCount++;
                     if (this.dropCount >= 20) {
-                        LOGGER.warn(this.player.getName() + " dropped their items too quickly!");
+                        if(!PapayaConfig.removeConsoleSpam) { // Papaya - Allow disabling message
+                            LOGGER.warn(this.player.getName() + " dropped their items too quickly!");
+                        }
                         this.disconnect("You dropped your items too quickly (Hacking?)");
                         return;
                     }
@@ -1233,7 +1245,9 @@ public class PlayerConnection implements PacketListenerPlayIn, ITickable {
             this.player.inventory.itemInHandIndex = packetplayinhelditemslot.a();
             this.player.resetIdleTimer();
         } else {
-            PlayerConnection.LOGGER.warn("{} tried to set an invalid carried item", this.player.getName());
+            if(!PapayaConfig.removeConsoleSpam) { // Papaya - Allow disabling message
+                PlayerConnection.LOGGER.warn("{} tried to set an invalid carried item", this.player.getName());
+            }
             this.disconnect("Invalid hotbar selection (Hacking?)"); // CraftBukkit //Spigot "Nope" -> Descriptive reason
         }
     }
@@ -1299,7 +1313,9 @@ public class PlayerConnection implements PacketListenerPlayIn, ITickable {
                     this.minecraftServer.server.playerCommandState = false;
                 }
             } else if (s.isEmpty()) {
-                LOGGER.warn(this.player.getName() + " tried to send an empty message");
+                if(!PapayaConfig.removeConsoleSpam) { // Papaya - Allow disabling message
+                    LOGGER.warn(this.player.getName() + " tried to send an empty message");
+                }
             } else if (getPlayer().isConversing()) {
                 // Spigot start
                 final String message = s;
@@ -1717,7 +1733,9 @@ public class PlayerConnection implements PacketListenerPlayIn, ITickable {
                 } else if (packetplayinuseentity.a() == PacketPlayInUseEntity.EnumEntityUseAction.ATTACK) {
                     if (entity instanceof EntityItem || entity instanceof EntityExperienceOrb || entity instanceof EntityArrow || (entity == this.player && !player.isSpectator())) { // CraftBukkit
                         this.disconnect(new ChatMessage("multiplayer.disconnect.invalid_entity_attacked", new Object[0]));
-                        this.minecraftServer.warning("Player " + this.player.getName() + " tried to attack an invalid entity");
+                        if(!PapayaConfig.removeConsoleSpam) { // Papaya - Allow disabling message
+                            this.minecraftServer.warning("Player " + this.player.getName() + " tried to attack an invalid entity");
+                        }
                         return;
                     }
 
@@ -2226,7 +2244,9 @@ public class PlayerConnection implements PacketListenerPlayIn, ITickable {
             TileEntitySign tileentitysign = (TileEntitySign) tileentity;
 
             if (!tileentitysign.a() || tileentitysign.signEditor == null || !tileentitysign.signEditor.equals(this.player.getUniqueID())) { // Paper
-                this.minecraftServer.warning("Player " + this.player.getName() + " just tried to change non-editable sign");
+                if(!PapayaConfig.removeConsoleSpam) { // Papaya - Allow disabling message
+                    this.minecraftServer.warning("Player " + this.player.getName() + " just tried to change non-editable sign");
+                }
                 this.sendPacket(tileentity.getUpdatePacket()); // CraftBukkit
                 return;
             }
diff --git a/src/main/java/net/minecraft/server/PlayerList.java b/src/main/java/net/minecraft/server/PlayerList.java
index 80e9c920..3f8a8db5 100644
--- a/src/main/java/net/minecraft/server/PlayerList.java
+++ b/src/main/java/net/minecraft/server/PlayerList.java
@@ -17,6 +17,8 @@ import java.util.List;
 import java.util.Map;
 import java.util.UUID;
 import javax.annotation.Nullable;
+
+import me.moomoo.papaya.PapayaConfig;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
@@ -241,7 +243,21 @@ public abstract class PlayerList {
         }
         // Paper end
         // CraftBukkit - Moved from above, added world
-        PlayerList.f.info(entityplayer.getName() + "[" + s1 + "] logged in with entity id " + entityplayer.getId() + " at ([" + entityplayer.world.worldData.getName() + "]" + entityplayer.locX + ", " + entityplayer.locY + ", " + entityplayer.locZ + ")");
+        if(!PapayaConfig.removeConnectionMessages){
+            if(PapayaConfig.hidePlayerIPS){
+                if(PapayaConfig.hidePlayerCoords){
+                    PlayerList.f.info(entityplayer.getName() + "[" + "HIDDEN" + "] logged in with entity id " + entityplayer.getId() + " at ([" + entityplayer.world.worldData.getName() + "]" + "HIDDENX" + ", " + "HIDDENY" + ", " + "HIDDENZ" + ")");
+                } else {
+                    PlayerList.f.info(entityplayer.getName() + "[" + "HIDDEN" + "] logged in with entity id " + entityplayer.getId() + " at ([" + entityplayer.world.worldData.getName() + "]" + entityplayer.locX + ", " + entityplayer.locY + ", " + entityplayer.locZ + ")");
+                }
+            } else {
+                if(PapayaConfig.hidePlayerCoords){
+                    PlayerList.f.info(entityplayer.getName() + "[" + s1 + "] logged in with entity id " + entityplayer.getId() + " at ([" + entityplayer.world.worldData.getName() + "]" + "HIDDENX" + ", " + "HIDDENY" + ", " + "HIDDENZ" + ")");
+                } else {
+                    PlayerList.f.info(entityplayer.getName() + "[" + s1 + "] logged in with entity id " + entityplayer.getId() + " at ([" + entityplayer.world.worldData.getName() + "]" + entityplayer.locX + ", " + entityplayer.locY + ", " + entityplayer.locZ + ")");
+                }
+            }
+        }
     }
 
     public void sendScoreboard(ScoreboardServer scoreboardserver, EntityPlayer entityplayer) {
diff --git a/src/main/java/net/minecraft/server/RegionFileCache.java b/src/main/java/net/minecraft/server/RegionFileCache.java
index daa7e997..37ec4bf8 100644
--- a/src/main/java/net/minecraft/server/RegionFileCache.java
+++ b/src/main/java/net/minecraft/server/RegionFileCache.java
@@ -1,7 +1,7 @@
 package net.minecraft.server;
 
 import com.destroystokyo.paper.exception.ServerInternalException;
-import com.google.common.collect.Maps;
+
 import java.io.DataInputStream;
 import java.io.DataOutputStream;
 import java.io.File;
@@ -9,6 +9,8 @@ import java.io.IOException;
 import java.util.Iterator;
 import java.util.Map;
 import com.destroystokyo.paper.PaperConfig; // Paper
+import me.moomoo.papaya.PapayaConfig;
+
 import java.util.LinkedHashMap; // Paper
 
 public class RegionFileCache {
@@ -75,7 +77,9 @@ public class RegionFileCache {
         }
     }
     private static void printOversizedLog(String msg, File file, int x, int z) {
-        org.apache.logging.log4j.LogManager.getLogger().fatal(msg + " (" + file.toString().replaceAll(".+[\\\\/]", "") + " - " + x + "," + z + ") Go clean it up to remove this message. /minecraft:tp " + (x<<4)+" 128 "+(z<<4) + " - DO NOT REPORT THIS TO PAPER - You may ask for help on Discord, but do not file an issue. These error messages can not be removed.");
+        if(!PapayaConfig.removeConsoleSpam){ // Papaya - Allow disabling
+            org.apache.logging.log4j.LogManager.getLogger().fatal(msg + " (" + file.toString().replaceAll(".+[\\\\/]", "") + " - " + x + "," + z + ") Go clean it up to remove this message. /minecraft:tp " + (x<<4)+" 128 "+(z<<4) + " - DO NOT REPORT THIS TO PAPER - You may ask for help on Discord, but do not file an issue. These error messages can be removed by setting messages#big-chunk to false in papaya.yml");
+        }
     }
 
     private static final int DEFAULT_SIZE_THRESHOLD = 1024 * 8;
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index cdb6121d..986d1ed7 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -12,6 +12,7 @@ import io.netty.buffer.ByteBuf;
 import io.netty.buffer.ByteBufOutputStream;
 import io.netty.buffer.Unpooled;
 import io.netty.handler.codec.base64.Base64;
+import me.moomoo.papaya.PapayaConfig;
 import net.md_5.bungee.api.chat.BaseComponent;
 import net.minecraft.server.WorldType;
 import net.minecraft.server.*;
@@ -689,7 +690,7 @@ public final class CraftServer implements Server {
 
         org.spigotmc.SpigotConfig.init((File) console.options.valueOf("spigot-settings")); // Spigot
         com.destroystokyo.paper.PaperConfig.init((File) console.options.valueOf("paper-settings")); // Paper
-        me.moomoo.durian.DurianConfig.init((File) console.options.valueOf("durian-settings")); // Durian
+        PapayaConfig.init((File) console.options.valueOf("papaya-settings")); // Papaya
         for (WorldServer world : console.worlds) {
             world.worldData.setDifficulty(difficulty);
             world.setSpawnFlags(monsters, animals);
diff --git a/src/main/java/org/bukkit/craftbukkit/Main.java b/src/main/java/org/bukkit/craftbukkit/Main.java
index 2fbe6c52..8bd05dbc 100644
--- a/src/main/java/org/bukkit/craftbukkit/Main.java
+++ b/src/main/java/org/bukkit/craftbukkit/Main.java
@@ -143,13 +143,13 @@ public class Main {
                         .describedAs("Name");
                 // Paper end
 
-                // Durian Start
-                acceptsAll(asList("durian", "durian-settings"), "File for durian settings")
+                // Papaya Start
+                acceptsAll(asList("papaya", "papaya-settings"), "File for papaya settings")
                     .withRequiredArg()
                     .ofType(File.class)
-                    .defaultsTo(new File("durian.yml"))
+                    .defaultsTo(new File("papaya.yml"))
                     .describedAs("Yml file");
-                // Durian end
+                // Papaya end
             }
         };
 
-- 
2.22.0.windows.1

